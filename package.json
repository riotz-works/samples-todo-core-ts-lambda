{
    "name": "samples-todo-core-ts-lambda",
    "version": "0.0.0",
    "description": "Sample Lambda Applications :: To-Do",
    "main": "api.js",
    "scripts": {
        "serve": "serverless webpack serve",
        "clean": "rimraf ./target",
        "setup": "npm install && npm dedupe",
        "validate": "npm run gitignore:validate",
        "build": "tslint -p tsconfig.json && tsc -p tsconfig.json",
        "test": "jest --coverage",
        "gitignore:generate": "jsurl https://www.gitignore.io/api/node > .gitignore && jsurl https://raw.githubusercontent.com/riotz-works/riotz-project-config-gitignore/master/gitignore >> .gitignore",
        "gitignore:validate": "npm run gitignore:generate && git add .gitignore && git diff --cached --exit-code --quiet || (echo Error: gitignore is not up to date && exit 1)",
        "gitignore:push": "npm run gitignore:generate && git add .gitignore && git diff --cached --exit-code --quiet || git commit -m \"A gitignore file automatically generated by script\" && git push"
    },
    "dependencies": {
        "aws-sdk": "^2.94.0",
        "bunyan": "^1.8.12",
        "claudia-api-builder": "^2.5.1",
        "lodash": "^4.17.4"
    },
    "devDependencies": {
        "@types/bunyan": "^1.8.4",
        "@types/jest": "^20.0.8",
        "@types/lodash": "^4.14.74",
        "@types/node": "^8.0.33",
        "jest": "^29.3.1",
        "jsurl-cli": "*",
        "rimraf": "2.6.2",
        "serverless": "^1.25.0",
        "serverless-dynamodb-local": "^0.2.27",
        "serverless-offline": "^3.33.0",
        "serverless-webpack": "^4.2.0",
        "ts-jest": "^29.0.3",
        "ts-loader": "^9.4.2",
        "tslint": "^5.8.0",
        "typescript": "2.6.2",
        "webpack": "^5.75.0",
        "webpack-node-externals": "^1.6.0"
    },
    "jest": {
        "moduleFileExtensions": [
            "ts",
            "js"
        ],
        "transform": {
            "\\.ts$": "./node_modules/ts-jest/preprocessor.js"
        },
        "testMatch": [
            "**/test/**/*.ts"
        ],
        "collectCoverage": true,
        "collectCoverageFrom": [
            "**/src/**/*.ts",
            "!**/src/**/*.d.ts"
        ],
        "coverageDirectory": "./target/coverage"
    },
    "license": "MIT"
}
